== notes iface -  udev =


En cas de pepin sur la gestion des interfaces reseaux entre le systeme / vms 

on peut être ammener à avoir une différence entre les conf présentes sur les interfaces montées et celle vraiment configurées sur esxi :

ex 


1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet 10.120.2.81/32 brd 10.120.2.81 scope global lo:0
2: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000
    link/ether 00:50:56:96:07:26 brd ff:ff:ff:ff:ff:ff
    inet 10.110.110.53/16 brd 10.110.255.255 scope global eth1
3: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000
    link/ether 00:50:56:96:64:68 brd ff:ff:ff:ff:ff:ff
    inet 10.101.110.53/16 brd 10.101.255.255 scope global eth0
4: eth2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000
    link/ether 00:50:56:96:db:c9 brd ff:ff:ff:ff:ff:ff
    inet 10.120.110.53/16 brd 10.120.255.255 scope global eth2
5: eth3: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN qlen 1000
    link/ether 00:50:56:96:c5:a3 brd ff:ff:ff:ff:ff:ff
Vous avez du nouveau courrier dans /var/spool/mail/root



sur esxi :

iface1 00:50:56:96:64:68 >> vlan admin
iface2 00:50:56:96:db:c9  >> backend
iface3 00:50:56:96:c5:a3  >> front
iface4 00:50:56:96:07:26 >> vlan backup


on va donc sur esxi 
delete 

iface4 

puis on va renamme l'interface eth3 en eth1  dans le fichier udev :

cat /root/70-persistent-net.rules 
# This file was automatically generated by the /lib/udev/write_net_rules
# program, run by the persistent-net-generator.rules rules file.
#
# You can modify it, as long as you keep each rule on a single
# line, and change only the value of the NAME= key.

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:64:68", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:07:26", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:c5:a3", ATTR{type}=="1", KERNEL=="eth*", NAME="eth3"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:db:c9", ATTR{type}=="1", KERNEL=="eth*", NAME="eth2"


On va donc avoir a la base le fichier udev 


# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:64:68", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:07:26", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:c5:a3", ATTR{type}=="1", KERNEL=="eth*", NAME="eth3"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:db:c9", ATTR{type}=="1", KERNEL=="eth*", NAME="eth2"


puis le modifier comme suivant avant de reloader udev : 

on supprime les lignes de "eth1" qui contenait la conf iface4 
puis on renomme l'interface eth3 en eth1 :

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:64:68", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"


# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:c5:a3", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"

# PCI device 0x15ad:0x07b0 (vmxnet3)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:50:56:96:db:c9", ATTR{type}=="1", KERNEL=="eth*", NAME="eth2"


= reload udev sans devoir le redémarrer : =

udevadm control --reload-rules && udevadm trigger


