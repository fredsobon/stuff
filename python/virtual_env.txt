== virtualenv notes : ==

on va utiliser un virtualenv : pas de dépendances avec notre system pour tester des lib etc ..

sudo apt install virtualenv
ou

python3 -m pip install --user virtualenv

- on cree un rep dans lequel on pourra tester nos libs, confs sans impacter le systeme du pc :
mkdir learning ; cd learning

virtualenv venv
created virtual environment CPython3.8.2.final.0-64 in 256ms
  creator CPython3Posix(dest=/home/boogie/Documents/lab/flask/learning_flask/venv, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/boogie/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator

on peut lancer l'interpreteur python de notre choix dans un venv : comme on voit ici c'est un python2.7 :

virtualenv -p /usr/bin/python2.7 venv                                (⎈ b-k:monitoring)
created virtual environment CPython2.7.18.candidate.1-64 in 340ms
  creator CPython2Posix(dest=/home/boogie/Documents/lab/flask/learning_flask/venv, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/boogie/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator

= pour utiliser un venv il doit etre activé :
source venv/bin/activate                                             (⎈ b-k:monitoring)

(venv)

on voit le nom du venv dans notre prompt

A partir du moment ou on a notre venv d'activer on peut lancer et installer des pacquets qui ne seront gérés que dans notre venv :
pip install requests
DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support
Collecting requests
  Downloading requests-2.24.0-py2.py3-none-any.whl (61 kB)
     |████████████████████████████████| 61 kB 152 kB/s
Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1
  Downloading urllib3-1.25.9-py2.py3-none-any.whl (126 kB)
     |████████████████████████████████| 126 kB 3.0 MB/s
Collecting certifi>=2017.4.17
  Downloading certifi-2020.6.20-py2.py3-none-any.whl (156 kB)
     |████████████████████████████████| 156 kB 5.2 MB/s
Collecting chardet<4,>=3.0.2
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
     |████████████████████████████████| 133 kB 5.2 MB/s
Collecting idna<3,>=2.5
  Downloading idna-2.9-py2.py3-none-any.whl (58 kB)
     |████████████████████████████████| 58 kB 1.6 MB/s
Installing collected packages: urllib3, certifi, chardet, idna, requests
Successfully installed certifi-2020.6.20 chardet-3.0.4 idna-2.9 requests-2.24.0 urllib3-1.25.9

Si vous avez terminé de travailler dans l’environnement virtuel pour le moment, vous pouvez le désactiver:

$ deactivate
Cela vous fait revenir à l’interpréteur par défaut Python du système, avec toutes ses bibliothèques installées.

Pour supprimer une environnement virtuel, supprimez juste son dossier. (Dans ce cas, ce serait rm -rf venv.)

Après un certain temps, cependant, vous pourriez vous retrouver avec un grand nombre d’environnements virtuels un peu partout dans votre système, et il est possible que vous oubliez leurs noms ou où ils ont été placés.

