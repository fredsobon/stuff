=== notes python memcached ==

= install = 

sudo apt-get install python-memcache
ou
sudo pip install python-memcached

= get / set memcached key = 

>>> import memcached
>>> client = memcache.Client([('node', 11211)])
>>> sample_obj = {"name": "Soliman","lang": "Python"}
>>> client.set("sample_user", sample_obj, time=15)
>>> print "Stored to memcached, will auto-expire after 15 seconds"
>>> print client.get("sample_user")


= incr / decr methodes : =

import memcache
client = memcache.Client([('127.0.0.1', 11211)])
client.set("counter", "10")
client.incr("counter")
print "Counter was incremented on the server by 1, now it's %s" %
client.get("counter")
client.incr("counter", 9)
print "Counter was incremented on the server by 9, now it's %s" %
client.get("counter")
client.decr("counter")
print "Counter was decremented on the server by 1, now it's %s" %
client.get("counter")


Counter was incremented on the server by 1, now it's 11
Counter was incremented on the server by 9, now it's 20
Counter was decremented on the server by 1, now it's 19

The incr and decr methods allow you to specify a delta value or to by default increment/decrement by 1.


= retrouver toutes les clés avec un préfixe settée : =

import memcache
client = memcache.Client([('127.0.0.1', 11211)])
data = {"some_key1": "value1",
"some_key2": "value2"}
client.set_multi(data, time=15, key_prefix="pfx_")
print "saved the dict with prefix pfx_"
print "getting one key: %s" % client.get("pfx_some_key1")
print "Getting all values: %s" % client.get_multi(["some_key1", "some_
key2"], key_prefix="pfx_")




