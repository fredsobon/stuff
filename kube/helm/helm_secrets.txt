=== helm secret notes : ===



https://github.com/futuresimple/helm-secrets

https://medium.com/@mel000vin_14011/encrypting-helm-secrets-7f37a0ccabeb

on va pouvoir lire, editer, modifier des secrets chiffrés 

Il faut installer le plugin helm secrets : 
helm plugin install https://github.com/futuresimple/helm-secrets

le pkg sops est également nécéssaire : 
sudo dpkg -i  sops_3.5.0_amd64.deb
sops is an editor of encrypted files that supports YAML, JSON, ENV, INI and BINARY formats and encrypts with AWS KMS, GCP KMS, Azure Key Vault and PGP

on va pouvoir examiner les clés gpg de notre poste :

gpg --list-keys                         
/home/boogie/.gnupg/pubring.kbx
-------------------------------
pub   rsa4096 2019-11-27 [SC]
      BEEC6B925B691F80D07E0C943EC38B7777777777
uid          [  ultime ] Bob Lapin <bob@lapin.net>
sub   rsa4096 2019-11-27 [E]

si on dispose d'un fichier .sops.yaml contenant l'empreinte de notre clé publique et que les secrets ont été chiffrés avec notre clé publique : alors on pourra le déchiffrer avec notre clé privée. 

on va désormais pouvoir utiliser les fonctions du plugins : 
ex: on déchiffre un secret : cela créé un fichier en local qu'on va pouvoir examiner avec un editeur classique : 

- dechiffrer un fichier : 

helm secrets dec helm-vars/devtools/secrets.yaml

un fichier ".dec" est généré  

helm-vars/devtools/secrets.yaml.dec

- examiner un fichier : 
view  helm-vars/devtools/secrets.srs.yaml.dec

helm secrets view helm_vars/devtools/secrets.srs.yaml


- chiffrement de fichier :

on va pouvoir chiffrer un fichier .
il nous faut une clé gpg .
On va lister nos / notre clé et renseigner un fichier .sops.yaml
Ce fichier devra être présent dans le rep contenant notre fichier a chiffrer 
 cat .sops.yaml                                                       
creation_rules:
 - pgp: BEEC 6B92 5B69 1F80 D07E  0C94 333R 8BF7 9EA3 6TYE

on le chiffre avec le commande :

helm secrets enc  fichier.

helm secrets enc secrets.yaml



- install de charts : 

on peut tester un l'install d'un chart en dry run ( --dry-run) , updatant notre repo ( --dep-up)

helm secrets install --dry-run --dep-up --name  auth-system --namespace authent -f  helm_vars/lapin/values.yaml -f helm_vars/lapin/secrets.srs.yaml .



- Modif / upgrade de chart :

helm secrets upgrade auth-system . --values helm_vars/lapin/values.yaml -f helm_vars/lapin/secrets.srs.yaml
