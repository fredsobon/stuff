=== notes helm charts : ===


https://github.com/dexidp/dex
https://github.com/heptiolabs/gangway
https://cert-manager.io/docs/installation/



notes de setting d'authen kube en utilisant dex et gangway 

on va générer une authent via ad ( dex > connection ad > token > dev > user ok puis gangway appli frontend qui permet a un user authentifié de recupérer sa conf kubectl ) 

> dex est l'identity provider 
> gangway est le génerateur de kubeconfig 


on va configurer dex pour se connecter à notre ad pour authentifier les users avec leur email et recupérer les groupes dont ils sont membres ..

Il faut configurer notre kube api server pour qu'il prenne en charge un oidc (composant d'authent )

     --oidc-ca-file=..../dex-ca.pem
     --oidc-issuer-url=https://dex.example.com:32000
     --oidc-client-id=gangway
     --oidc-username-claim=email
     --oidc-groups-claim=groups


Cette conf helm ne gere pas l'install de certmanager mais peut l'utiliser pour régénérer/renouvellerdes certif tls 
Si cert manager est activé on peut redéfinir une authent de certif pour notre cluster kube . Il faut définir en common names gangway et dex dans nos certs :

certManager:
  gangwayCert:
    altNames:
    - kubectl.prod.lapin.net
  dexCert:
    altNames:
    - dex.prod.lapin.net


helm secrets install --name  auth-system --namespace authent -f  helm-vars/prod/values.yaml  -f helm-vars/prod/secrets.srs.yaml .


On va pouvoir utilier certmanager pour générer / renouveller nos certs.
Pour installer certmanager et notre ca : 

kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.12/deploy/manifests/00-crds.yaml
helm  install --name cert-manager --namespace cert-manager jetstack/cert-manager
kubectl create secret tls lapin-env-ca-keypair --cert /tmp/lapin_env_CA.crt --key /tmp/lapin_env_CA.key --namespace cert-manager

apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: lapin-env-ca-issuer
spec:
  ca:
    secretName: lapin-env-ca-keypair


- Update de chart :

si on veut updater nos valeurs :

 helm secrets upgrade auth-system . --values helm_vars/infra/values.yaml -f helm_vars/infra/secrets.srs.yaml


- Exam de diff  de charts : 

ex :
on va pouvoir examiner les diffs potentielles de valeurs entre notre conf poussées et notre conf locate 

helm secrets diff upgrade auth-system . --values helm_vars/lapin/values.yaml -f helm_vars/lapin/secrets.srs.yaml


-   loadBalancerIP: 10.126.0.11
+   loadBalancerIP: 10.126.0.78




== utilisation de l'external load balancer : ==


on va pouvoir utilsier l'external loadbalancer pour publier notre service dans un dns ( ex : external-load-balancer > powerdns gérant une zone particulière ... ) 

pour cela il faut rajouter des annotations à nos services :
ex: dex :

  annotations:
    external-dns.alpha.kubernetes.io/hostname: dex.svc.prod.lapin.io
    external-dns.alpha.kubernetes.io/ttl: "60"
