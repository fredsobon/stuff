== notes prometheus kube ==


= mise a jour repo avant install via helm :
helm repo up

= install brute dans un premier temps sur un cluster quasi vide : 
helm install monitoring stable/prometheus-operator

helm ls                                                    (⎈ b-k:monitoring)
NAME      	NAMESPACE 	REVISION	UPDATED                                 	STATUS  	CHART                     	APP VERSION
monitoring	monitoring	1       	2020-06-13 18:05:06.382195114 +0200 CEST	deployed	prometheus-operator-8.14.0	0.38.1

= test de base :

on va utiliser kubectl port-forward pour examiner via un tunnel créer en tre notre cluster et notre laptop la bonne installation de prometheus :
on va examiner les pods identifier celui de prometheus :
 kctl get all                                               (⎈ b-k:monitoring)
NAME                                                         READY   STATUS    RESTARTS   AGE
pod/alertmanager-monitoring-prometheus-oper-alertmanager-0   2/2     Running   0          3m21s
pod/monitoring-grafana-9b57b76bd-vzq5m                       2/2     Running   0          3m37s
pod/monitoring-kube-state-metrics-8679d78f6f-fdtlf           1/1     Running   0          3m37s
pod/monitoring-prometheus-node-exporter-8bmhq                1/1     Running   0          3m37s
pod/monitoring-prometheus-node-exporter-bpkcw                1/1     Running   0          3m37s
pod/monitoring-prometheus-node-exporter-sfsbp                1/1     Running   0          3m37s
pod/monitoring-prometheus-oper-operator-885477745-4pgvh      2/2     Running   0          3m37s
pod/prometheus-monitoring-prometheus-oper-prometheus-0       3/3     Running   1          3m10s


on cherche maintenant dans les services le port utilisé pour rediriger vers le pod prometheus :
..
NAME                                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
service/alertmanager-operated                     ClusterIP   None             <none>        9093/TCP,9094/TCP,9094/UDP   3m21s
service/monitoring-grafana                        ClusterIP   10.111.103.232   <none>        80/TCP                       3m37s
service/monitoring-kube-state-metrics             ClusterIP   10.104.46.201    <none>        8080/TCP                     3m37s
service/monitoring-prometheus-node-exporter       ClusterIP   10.97.201.199    <none>        9100/TCP                     3m38s
service/monitoring-prometheus-oper-alertmanager   ClusterIP   10.99.230.203    <none>        9093/TCP                     3m38s
service/monitoring-prometheus-oper-operator       ClusterIP   10.100.230.164   <none>        8080/TCP,443/TCP             3m37s
service/monitoring-prometheus-oper-prometheus     ClusterIP   10.107.189.2     <none>        9090/TCP                     3m38s
service/prometheus-operated                       ClusterIP   None             <none>        9090/TCP                     3m10s
..
on utilise port-forward vers le pod et le port du service et un port chois pour consulter sur notre laptop :

kubectl port-forward prometheus-monitoring-prometheus-oper-prometheus-0 9090:9090

on ouvre un navigateur et on voit sans souci notre instance prometheus : 
http://localhost:9090/graph


on va faire la même chose pour grafana :
on va examiner le pod et le service : c'est le port 3000 qui est utilisé 


ex: k9s sur service monitoring grafana : 
┌───────────────────────────────────────────────────── Describe(monitoring/monitoring-grafana) ──────────────────────────────────────────────────────┐
│Name:              monitoring-grafana                                                                                                               │
│Namespace:         monitoring                                                                                                                       │
│Labels:            app.kubernetes.io/instance=monitoring                                                                                            │
│                   app.kubernetes.io/managed-by=Helm                                                                                                │
│                   app.kubernetes.io/name=grafana                                                                                                   │
│                   app.kubernetes.io/version=7.0.3                                                                                                  │
│                   helm.sh/chart=grafana-5.1.4                                                                                                      │
│Annotations:       <none>                                                                                                                           │
│Selector:          app.kubernetes.io/instance=monitoring,app.kubernetes.io/name=grafana                                                             │
│Type:              ClusterIP                                                                                                                        │
│IP:                10.111.103.232                                                                                                                   │
│Port:              service  80/TCP                                                                                                                  │
│TargetPort:        3000/TCP                                                                                                                         │
│Endpoints:         10.124.71.97:3000                                                                                                                │
│Session Affinity:  None                                                                                                                             │
│Events:            <none>


on redirige vers le port 3000 

kubectl port-forward monitoring-grafana-9b57b76bd-vzq5m  3000:3000

on ouvre un navigateur et c'est bon 

http://localhost:3000/login



= installation d'un controller ingress : =

helm repo add nginx-stable https://helm.nginx.com/stable  
"nginx-stable" has been added to your repositories

helm install my-release nginx-stable/nginx-ingress  
NAME: my-release
LAST DEPLOYED: Sun Jun 14 13:28:15 2020
NAMESPACE: monitoring
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
The NGINX Ingress Controller has been installed.

= exposition de nos services via un ingress controler :

on va overrider des valeurs de charts dans un fichier dédié comprenant des conf ingress specifiant les "hosts" et une external ip : que l'on associe a un node de notre cluster 


cat b-k-prometheus-operator.yaml                           
prometheus:
 ingress:
   enabled: true
   annotations:
     kubernetes.io/ingress.class: nginx
   hosts:
   - "prometheus.boogie7.net"
 service:
   externalIPs:
   - 192.168.0.82

alertmanager:
 ingress:
   enabled: true
   annotations:
     kubernetes.io/ingress.class: nginx
   hosts:
   - "alertmanager.boogie7.net"
 service:
   externalIPs:
   - 192.168.0.82

grafana:
  persistence:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - "grafana.boogie7.net"
  service:
    externalIPs:
    - 192.168.0.82
coreDns:
  enabled: true

kubeDns:
  enabled: false

on upgrade notre chart 
helm upgrade monitor prometheus-operator -f b-k-prometheus-operator.yaml


on renseigne notre fichier hosts et c'est ok nos services sont dispos via un navigateur.
