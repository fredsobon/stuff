==== notes vimdiff uses : ===











https://lornajane.net/posts/2015/vimdiff-and-vim-to-compare-files

Using diff -w gave me more or less the right output, but vimdiff was basically panicking and showing me all lines as changed. To get around this, I asked stackoverflow what to do and found this question and answers, which led me to add the following lines to my .vimrc:


set diffopt+=iwhite
set diffexpr=""

With these lines in place, vimdiff did exactly what I needed until I had changed (deleted!) so much of one of the files that it couldn't see the similarities any more. At which point, I switched to just using vim ...

Vim To Compare Files
Vimdiff only really works if the files are quite similar, I was refactoring and ended up with one file that was quite small, but still contained sections that I needed to compare to the same sections in another file. To do this, I opened both files in vertical split panes in vim, and made them scroll together. The exact steps look something like this:

Open the first file in vim
Type :vsplit to get two panes side by side (tip: maximise the window on your widescreen monitor before you run this command)
Jump to the second pane (Ctrl+w followed by arrow key) and then open the other file :e filename
Turn on scrollbind for this pane with :set scrollbind (you can turn it off later with :set noscrollbind)
Move back to the first pane again (with Ctrl+w and an arrow in the direction you want to go, if you don't use splits a lot then this can be confusing) and turn on scrollbind there too
To align two things (methods in my case but it could be anything), try [line number]zt to get thing you want to the top of the screen, and do the same in the other pane also. You will need to turn off scrollbinding to point to the right place, then turn it on again.
You don't have the diff features but you can very easily get the code to line up side-by-side and then skip back and forth copying/pasting/deleting/whatever as you wish. I hadn't used the scrollbind before so I found it very handy - between all these tools and a healthy set of vim macros, I got through my day!
