===== notes gpg : =====

https://help.github.com/en/github/authenticating-to-github/generating-a-new-gpg-key
gpg >> 2.2.12-1 

Generation de clé gpg : 

gpg --full-generate-key

1/ rsa 
2/ taille 4096
3/ pas d'expiration
4/ on saisit nom du compte et mailbox 
..

les clefs publique et secrète ont été créées et signées.

pub   rsa4096 2019-11-27 [SC]
      BEEC6B925B691F80D07E0C943EC38BF79EA37929
uid                      Bob Lapin <bob@lapin.com>
sub   rsa4096 2019-11-27 [E]


5/ on liste les cles pour lesquelles on a une clé pub et priv 

pg --list-secret-keys --keyid-format LONG                                   [☸ minikube:default]
gpg: vérification de la base de confiance
gpg: la clef publique de la clef de confiance ultime D39EC716B5059BFC est introuvable
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: profondeur : 0  valables :   2  signées :   0
     confiance : 0 i., 0 n.d., 0 j., 0 m., 0 t., 2 u.
/home/boogie/.gnupg/pubring.kbx
-------------------------------
sec   rsa4096/3EC38BF79EA37929 2019-11-27 [SC]
      BEEC6B925B691F80D07E0C943EC38BF79EA37929
uid                [  ultime ] Bob Lapain <bob@lapin.com>
ssb   rsa4096/88863559A23B6E52 2019-11-27 [E]

6/ on va publier notre clé gpg pub :

gpg --armor --export EC38BF79EA37929

> on a l'affichage de notre clé en ascii 

on va donc pouvoir la sauvegarder dans un fichier : 

lapin-gpg.pub.key



- Import de clés pub dans notre trousseau gpg :

si on travaille en equipe on peut avoir besoin d'avoir à dispo les clés pub de nos collegues, si elle sont dispos dans un repertoire on peut les importer en bloc :

ls gpg/keys/
bob.key lapin.key 

on peut tout importer d'un coup : 
gpg --import gpg/keys/*


une verif avec gpg --list nous permet de verifier.
