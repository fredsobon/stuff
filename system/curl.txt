Appels curl en forcant le host :

On test un appel avec l'ip du serveur et le domaine concerné avec l'option “-H fo-carrefour.fo.uat.e-merchant.com” Lors du premier appel on met 14 seconde

time_curl -o /dev/null -H "Host:fo-carrefour.fo.uat.e-merchant.com" 10.3.195.2/jardin-exterieur/mobilier-de-jardin-barbecue/salon-de-jardin_m3202_frfr.html
 
HttpCode: 200 -- Time_connect: 0,008 -- Time_startransfert: 14,452 -- Time_TOTAL: 14,473

Le second appel est généré en 1,8 seconde : la page a été mise en cache memcached

time_curl -o /dev/null -H "Host:fo-carrefour.fo.uat.e-merchant.com" 10.3.195.2/jardin-exterieur/mobilier-de-jardin-barbecue/salon-de-jardin_m3202_frfr.html
 
HttpCode: 200 -- Time_connect: 0,006 -- Time_startransfert: 1,805 -- Time_TOTAL: 1,828

curl -H "Host: wsint-client.e-merchant.local" 'http://192.168.22.56?d=webServices_Server&c=ServerRest&sCallerApp=bo-client-legacy&model=wsPayment&method=getPaypalPaymentsToValidate&rm=wsPayment&rf=getPaypalPaymentsToValidate&INCOMING_DB_ID=2'

Appel Curl en changeant le user agent

curl -A "Mozilla/5.0 (Linux; U; Android 2.3; en-us) AppleWebKit/999+ (KHTML, like Gecko) Safari/999.9" -I http://staging.fo-apc-mobile.fo.e-merchant.net
HTTP/1.1 403 Forbidden
X-Backend: web01
Content-Type: text/html; charset=iso-8859-1
X-Is-Internal: true
X-UA-Device: 4
Date: Tue, 25 Nov 2014 14:57:00 GMT
Age: 0
Connection: keep-alive
X-Cache: MISS
Vary: Accept-Encoding, User-Agent
X-RP: rp01

Forger un header

How to set a custom HTTP header in curl Question: I am trying to fetch a URL with curl command, but want to set a few custom header fields in the outgoing HTTP request. How can I use a custom HTTP header with curl?

curl is a powerful command-line tool that can transfer data to and from a server over network. It supports a number of transfer protocols, notably HTTP/HTTPS, and many others such as FTP/FTPS, RTSP, POP3/POP3S, SCP, IMAP/IMAPS, etc. When you send out an HTTP request for a URL with curl, it uses a default HTTP header with only essential header fields (e.g., User-Agent, Host, and Accept).

In some cases, however, you may want to override the default header or even add a custom header field in an HTTP request. For example, you may want to override “Host” field to test a load balancer, or spoof “User-Agent” string to get around browser-specific access restriction. In other cases, you may be accessing a website which requires a specific cookie, or testing a REST-ful API with various custom parameters in the header.

To handle all these cases, curl provides an easy way to fully control the HTTP header of outgoing HTTP requests. The parameter you want to use is “-H” or equivalently “–header”.

The “-H” option can be specified multiple times with curl command to define more than one HTTP header fields.

For example, the following command sets three HTTP header fields, i.e., overriding “Host” field, and add two fields (“Accept-Language” and “Cookie”).

  $ curl -H 'Host: 157.166.226.25' -H 'Accept-Language: es' -H 'Cookie: ID=1234' http://cnn.com

For standard HTTP header fields such as “User-Agent”, “Cookie”, “Host”, there is actually another way to setting them. The curl command offers designated options for setting these header fields:

    A (or –user-agent): set “User-Agent” field.
    b (or –cookie): set “Cookie” field.
    e (or –referer): set “Referer” field.

For example, the following two commands are equivalent. Both of them change “User-Agent” string in the HTTP header.

$ curl -H "User-Agent: my browser" http://cnn.com
$ curl -A "my browser" http://cnn.com

Curl requette json

curl -s -X GET -i -u emerchant@support.pertimm.com:ij54qs91  -H 'Content-Type: application/json'   https://pertimm.bo.uat.e-merchant.com/001-pixmania_frfr/admin2/api/v1/users/export.json 

MUTU][UAT][VIT] web01:~# curl -X GET -H "Content-type: application/json" -H "Accept: application/json" -x proxy01.secu.common.prod.vit.e-merchant.net:3128 http://stg.api.bazaarvoice.com/data/statistics.json?
 {
       "Includes":
       {
       },
       "HasErrors": true,
       "Offset": null,
       "TotalResults": null,
       "Locale": null,
       "Results": 

Curl pour tester les healthcheck Lb

curl  -H "Host:fo-carrefour.e-merchant.com"   http://f5-healthcheck:f5h3a1th-checK@10.3.30.18/healthcheck/check.php




= Curl sur vip :

[root@mwebwspub348u ~] # curl -s --connect-timeout 2 -m 3 -H 'Host: api-services' http://xwebwspriv145b:80/ok.php
##ApiServices##[root@mwebwspub348u ~] #
[root@mwebwspub348u ~] # curl -s --connect-timeout 2 -m 3 -H 'Host: api-private' http://xwebwspriv149b:80/authentication/ok.php
##Authentication Microservice##[root@mwebwspub348u ~] #



= Curl multiple parametres :

-u user 
-H Host 
-- data 

curl -v -X POST -u user:password -H "Host: lapin" -H "Accept: application/json" -H "Content-Length: 452" --data "datayousend" http://lapin:8080/bla
About to connect() to lapin port 8080
Trying 10.1.0.1... connected
Connected to lapin (10.1.0.1) port 8080
Server auth using Basic with user 'user'
> POST /message HTTP/1.1
> Authorization: Basic youyou==
> User-Agent: curl/7.15.5 (x86_64-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5
> Host: lapin
> Accept: application/json
> Content-Length: 452
> Content-Type: application/x-www-form-urlencoded
> 
> topic=lapin&key=&message=%7B%22eventType%22%3A%22HTTP/1.1 200 OK
< Date: Wed, 26 Oct 2016 11:21:49 GMT
< Content-Type: application/json
< Content-Length: 0
Connection #0 to host lapin left intact
Closing connection #0

= Boucle curl =  

for i in $(grep lapin...$ /etc/hosts|awk '{print $NF}'|xargs echo); do echo $i; curl -IL -H "Host: lapin" http://$i:84/path/index.html; done|grep ^Last-Modified:

node1
Last-Modified: Fri, 27 Nov 2016 10:15:53 GMT
node2
Last-Modified: Fri, 27 Nov 2016 10:15:53 GMT



== Redirection de header dans un fichier : ==

On peut rediriger dans un fichier avec l'option -o 
ex :

cur -X HEAD -I http://www.google.com -o fichier 

 cat fichier 
HTTP/1.1 302 Found
Cache-Control: private
Content-Type: text/html; charset=UTF-8
Location: http://www.google.fr/?gfe_rd=cr&ei=yVu5WOaqM7DS8Aer0YbgDw
Content-Length: 258
Date: Fri, 03 Mar 2017 12:04:25 GMT



=== Forcer la résolution d'une url sur une ip précise :

pour tester la réponse d'un site en forcant l'interrogation depuis une ip precise :

curl -v --resolve 'www.lapin.fr:80:77.23.77.20' http://www.lapin.fr/


