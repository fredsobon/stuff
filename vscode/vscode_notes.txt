=== notes vscode ===


- on peut ajouter des extensions pour gérer des languages précis 

menu - view -> extensions : installer l'extension qu'on veut.
redémarrer vscode

> pour selectionner le language par default 
dans la barre en bas à droite de l'éditeur : 
cliquer sur plain text -> puis sélectionner le language qui nous intéresse.

ex : go
on selectionne : des extensions de module sont proposées dans la fenêtre au même endroit : on install


= utilisation : =

on peut lancer vscode en cli :
code
si on veut ouvrir directement un repertoire precis : on le passe en argument à vscode 
code mon_folder
si on veut directement ouvrir un fichier on le passe en argument :
code /home/boogie/Documents/lab/python/complete_py/hello_world.py


== short cut  /raccourci clavier 

- afficher / masquer barre laterale gauche :
ctrl + b


- nouveau fichier :

ctrl + n 

- ouvrir un fichier :

ctrl + o

- sauvegarder un fichier  

ctrl + s


- lancer un programme dans un terminal 

ctrl + F5 : un shell s'ouvre et execute le programme qu'on a ouvert dans vscode

- lancer un programme en mode debug :

F5

--> le debugger apparait : on peut mettre un point d'arret n'importe ou dans notre programme et on lance le debugger avec F5 : on selectionne le debuger qui nous interesse et on voit dans la fenetre laterale le script s'executer.

- Variables :
il est possible de surveiller les variables avec l'onglet variable dans la fenetres

- watch  :
il est possible de surveiller les variables avec l'onglet watch  dans la fenetres

on peut ajouter des noms de variables à surveiller : ces variables sont accessible via l'onglet debug console.

- generer des commentaires (#) sur les lignes de code :

ctrl + shift + /  ---> ajoute ou supprime un commentaire sur une / des lignes de codes 

- travail dans un venv python :

vscode detecte en venv à la condition de le créer dans vscode 
 boogie@boogie-fly  /tmp  python3 -m venv .venv
 boogie@boogie-fly  /tmp  source .venv/bin/activate
(.venv)  boogie@boogie-fly  /tmp  


- Selection de texte : F12 :
si on selectionne du texte dans fenetre en cours : la touche F12 nous permettra de voir toutes les occurences de cd texte dans le code.

- slection de texte dasns un document autre : ctrl + shift + F10:
on va pouvoir chercher du texte sans fermer le doc en cours mais en cherchant par exemple la definition d'une fonction dans un fichier de code autre que celui ouvert : dans ce cas on verra dans une fenetre la definition de cet objet 

- linter :

sudo pip3 install pylint

ctrl + shift + p 
pour linter le code (apres avoir installer le linter et selectionner le linter voulu).


- ajout de param pour un script :

ex si un de nos script attend un argument en entrée : on en aura pas : dans ce cas on peut utiliser un fichier de conf : launch.json dans lequel on va definir une section args qui sera utiisée par le script dans son execution . pour cela dans le debugger on selectionne créer launch.json.
on a un rep .vscode et le fichier créer : on va ajuter une entrée comportant notre arg :

cd .vscode 
 boogie@boogie-fly  ~/Documents/lab/python/.vscode  ls
launch.json
 boogie@boogie-fly  ~/Documents/lab/python/.vscode  cat launch.json 
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
            "args:"    "Hello boogieland!"  <<< section ajoutée.
        }
    ]
}%                                                        
 

- creation de docstring :


il suffit de taper """ ou ''' puis <return> pour que le squelette du docstring soit crée.



= config vs :

> python 

view extention 

> exemple 
on installe le plugin / extension plugin de base python ( apporte plein de features utiles : autocompletion...)

on peut créer un fichier et l'associer à l'extention python :
> ouvrir le fichier : en bas a droite : ex plain text > on selectionne python pour associer notre fichier au language python

si on sauvegarde un fichier avec son extention : le fichier sera directement mappé en python.

affichage en bas à gauche on voit les erreurs et warning

-> settings :




