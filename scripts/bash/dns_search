#!/bin/bash
#
# vim: ft=sh et ts=4 sw=4 sts=4
#  
# Authors:	
#	David Larquey <dlarquey@e-merchant.com>
#	Maxime Guillet <m.guillet@e-merchant.com>
#
#   This script queries internal E-Merchant DNS name servers for hostname and
#   reverse name resolution for both historical and NG platform
#
# Fixes:
#   Maxime Guillet:      Add corrections for MX and TXT records type and depreciate legacy search
#   Maxime Guillet:      Add a nameonly filter view
#   David Larquey:       Add historical search, debug mode, hostonly & reverseonly filters. All included in one script in the aim of using bash completion
#   Maxime Guillet:      Original script for NG search requests
#   Vincent Batoufflet:  Remove legacy support and make script work under Mac OS
 
VERSION=0.4

DEBUG=0
SEARCH_HOST=1
SEARCH_REVERSE=1
FULL_DISPLAY=1

#############
# Functions #
#############

dns_search() {
    if [ -z "$DNS_SVN_PATH" ]; then
            echo "You must set environment variable \$DNS_SVN_PATH to use this" >&2
            return 1
    elif [ ! -d "$DNS_SVN_PATH" ]; then
            echo "DNS zones directory does not exist !\nplease, checkout this on local"
    fi

    [ "$(uname -s)" == 'Darwin' ] && SED_OPTS='-E' || SED_OPTS='-r'

    grep -iR --exclude-dir='.svn'  --exclude-dir='common' 'IN\s' $DNS_SVN_PATH | \
    
    # Purge & change field separator
    sed $SED_OPTS -e 's@^.*/@@' -e 's/[[:space:]]+/:/g' | \
    
    awk -v debug=$DEBUG -v search_host=$SEARCH_HOST -v search_reverse=$SEARCH_REVERSE '
            BEGIN {FS=":"}
    
            # grep adds a file prefix prefixe followed by ":" as first field. So, we must increment fields number from original input
    
            $4=="CNAME" && $5!~/\.$/ { $5=$5"."$1}
            {
                    # Type: A
                    # here is an example of grep output (file prefix is added by grep: "prod.vit.e-merchant.net")
                    # prod.vit.e-merchant.net:ipmi.web15.front.cfour:IN:A:10.3.240.74
                    if (search_host==1 && $3=="IN" && $4!="SOA" && $4!="PTR" && $2!~/^;/) {
                            if ($2=="@") {
                                entry=$1
                            } else {
                                entry=$2"."$1
                            }

                            if ($4=="MX") {
                                value=$5"@"$6
                            } else if ($4=="TXT") {
                                value=$5
                                for (i=6;i<=NF;++i) {
                                    value=value"@"$i
                                }
                            } else {
                                value=$5
                            }

                            if (debug==1) {
                                    print entry"\t"value"\t"$4
                            } else {
                                    print entry"\t"value
                            }
                    }
    
                    # Type: PTR Reverse
                    # here is an example of grep output (file prefix is added by grep: "db.10.3.40:15")
                    # db.10.3.40:15:X:IN:PTR:web14.front.dsg.prod.vit.e-merchant.net.
                    else if (search_reverse==1 && $3=="IN" && $4=="PTR" && $2!~/^;/) {
                            sub("db.", "", $1)
                            sub(".$", "", $5)
                            if (debug==1) {
                                    print $1"."$2"\t"$5"\t"$4
                            } else {
                                     print $1"."$2"\t"$5
                            }
                    }
            }' | \
    sort | grep -iE -- "$1" | ([ "$FULL_DISPLAY" -eq 1 ] && column -t | tr @ ' ' || awk '{print $1}')

    return 0
}

usage() {
cat <<EOF
NAME
        $(basename $0) - e-merchant DNS search script

SYNOPSIS
        Usage: $(basename $0) <HOST pattern> [OUTPUT] [--debug]

DESCRIPTION
        Query e-merchant DNS zones files for matching HOST pattern (regexp style).

        The environnment variable "DNS_SVN_PATH" must be set.

        DEBUG
                Debug mode displays some extra outputs if available

        OUTPUT
                --hostonly, -g     print only host results
                --reverseonly, -r  print only reverse results
                --nameonly, -1     print only name column
                --version, -v      print the version

        By default, it outputs host name resolution and reverse results for the matched pattern
EOF
}

[ $# -lt 1 ] && {
        echo "Missing argument."
        usage
        exit 1
}
    
########
# Main #
########

ARGS=$@
declare -a NEWARG

for arg in $ARGS; do
        case "$(echo $arg|tr A-Z a-z)" in
                --debug)
                        DEBUG=1
                        ;;
                --hostonly|-g)
                        SEARCH_HOST=1
                        SEARCH_REVERSE=0
                        ;;
                --reverseonly|-r)
                        SEARCH_REVERSE=1
                        SEARCH_HOST=0
                        ;;
                --nameonly|-1)
                        FULL_DISPLAY=0
                        ;;
                --help|help)
                        usage
                        exit ;;
                --version|-v)
                        echo $VERSION
                        exit
                        ;;
                --*)
                        echo "Unsupported option: $arg" >&2
                        exit 1
                        ;;
                *)
                        NEW_ARG[${#NEW_ARG[@]}]="$arg"
                        ;;
        esac
done

dns_search ${NEW_ARG[@]}
exit $?
