#!/bin/sh

####################################
## THIS FILE IS MANAGED BY PUPPET ##
####################################

# $Date: 2013-03-14 14:27:34 +0100 (jeu. 14 mars 2013) $
# $URL: http://svn.e-merchant.net/svn/norel-puppet/modules/oracle/files/default/init.d/dbora $
# $Id: dbora 7150 2013-03-14 13:27:34Z dlarquey $

#
# chkconfig: 2345 99 01
# description: Start the oracle databases
# processname: dbstart, lsnrctl
# config: /etc/oratab
# pidfile: -

# Change the value of ORACLE_HOME to specify the correct Oracle home
# directory for your installation.
#

ORALINE=$(grep ^oracle: /etc/oratab|head -n1)
ORACLE_HOME=$(echo $ORALINE|cut -d':' -f2)

#
# Change the value of ORACLE to the login name of the
# oracle owner at your site.
#

LOGFILE=/opt/oracle/dbstart.log
ORACLE=oracle

PATH=${PATH}:$ORACLE_HOME/bin
export ORACLE_HOME PATH

get_trace() {
    logfile=/opt/oracle/db$1-systraces
    if [ -f $logfile ]; then
        size=$(stat -c %s $logfile)
        [ $size -gt 10485760 ] && echo -n >$logfile
    fi

    echo "############## [$(date)] $1: System traces ##############" >>$logfile
    (echo '# Runlevel'; runlevel; echo '# Uname'; uname -a ; echo "# who"; /usr/bin/w; echo '# Memory' ; free -m; echo '# Mount'; mount; echo '# Top'; top -b -n 1; echo '# Processes'; ps fauxw; echo '# Files'; ls -lRi /data/oradata/) >>$logfile
}


waiting() {
    while true; do
        echo -n "."
        sleep 10
    done
}

log() {
    echo "[$(date)] $@"
}


safe_exit() {
    if [ -f /etc/oratab.faked ] && [ -f /etc/oratab.ORI ]; then
        cp -fp /etc/oratab.ORI /etc/oratab
        rm -f /etc/oratab.ORI
        rm -f /etc/oratab.faked
    fi
}


############
### MAIN ###
############

if [ -z "$ORACLE_HOME" ]; then
    echo -e "[$(date)][ERROR] Can't find ORACLE_HOME from oratab file" >>$LOGFILE
fi
case $1 in
    'start')

    #Â E-Merchant:   
    # Put the server in maintenance mode on 2.6.18 kernel
    if uname -r|grep -q '^2.6.18'; then
        cat <<EOF >/etc/nologin

#########################################################################
############### /etc/nologin: SERVER IS UNDER MAINTENANCE ###############
#########################################################################
This feature is added to the dbora init script to avoid running oracle under the maintenance kernel 2.6.18
Please contact the sysadmin team.

EOF
        exit 1
    fi

    touch /var/lock/subsys/dbora

    echo "********************" >>$LOGFILE
    echo "* Start : [$(date)] (runlevel: $(runlevel))" >>$LOGFILE
    echo "********************" >>$LOGFILE

    log "[dbstart] *** Starting db(s) ***" >>$LOGFILE
    waiting >>$LOGFILE &
    pid=$!

    su - $ORACLE -c "$ORACLE_HOME/bin/dbstart $ORACLE_HOME"
    ret=$?

    kill $pid
    log "[dbstart] Return code: $ret" >>$LOGFILE

    log "[lsnrctl] *** Starting listener(s) ***" >>$LOGFILE
    for instance in $(grep ^ora /etc/oratab|grep -v ^oracle|cut -d':' -f1); do
        log "[lsnrctl] Starting lsnrctl $instance" >>$LOGFILE
        su - $ORACLE -c "$ORACLE_HOME/bin/lsnrctl start listener_$instance"
    done

    log "[dbstart] Collect system traces" >>$LOGFILE
    get_trace start

    echo "********************" >>$LOGFILE
    echo "* Start : [$(date)]" >>$LOGFILE
    echo "********************" >>$LOGFILE

    ;;


    'stop')

    [ -f /etc/nologin ] && rm -f /etc/nologin

    echo "********************" >>$LOGFILE
    echo "* Stop : [$(date)] (runlevel: $(runlevel))" >>$LOGFILE
    echo "********************" >>$LOGFILE

    log 'Faking oratab: All instances are set into automatic start mode' >>$LOGFILE
    cp -fp /etc/oratab /etc/oratab.ORI
    sed -i "s/\(^ora.*:N\)/\\1:Y/" /etc/oratab
    cp -f /etc/oratab /etc/oratab.faked
    trap safe_exit EXIT

    log "[lsnrctl] *** Stopping listener(s) ***" >>$LOGFILE
    for instance in $(grep ^ora /etc/oratab|grep -v ^oracle|cut -d':' -f1); do
        log "[lsnrctl] Stopping lsnrctl $instance" >>$LOGFILE
        su - $ORACLE -c "$ORACLE_HOME/bin/lsnrctl stop listener_$instance"
    done

    log "[dbstop] *** Stopping db(s) ***" >>$LOGFILE
    waiting >>$LOGFILE &
    pid=$!

    su - $ORACLE -c "$ORACLE_HOME/bin/dbshut $ORACLE_HOME"
    ret=$?

    kill $pid
    log "[dbstop] Return code: $ret" >>$LOGFILE

    log "[dbstop] Collect system traces" >>$LOGFILE
    get_trace stop

    log 'Restoring the oratab file' >>$LOGFILE
    cp -f /etc/oratab.ORI /etc/oratab
    rm -f /etc/oratab.ORI
    rm -f /etc/oratab.faked

    log "[dbstop] Sync filsystems" >>$LOGFILE
    sync

    echo "********************" >>$LOGFILE
    echo "* Stop : [$(date)]" >>$LOGFILE
    echo "********************" >>$LOGFILE


    ;;


    *)
        echo "usage: $0 {start|stop}"
        exit
    ;;

esac

exit

