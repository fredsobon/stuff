View Jenkins Ansible plugin on the plugin site for more information.

This plugin allows to execute Ansible tasks as a job build step.

Global Configuration
Global Tool Configuration
OS User PATH
Adhoc
Examples
Arguments
Playbook
Examples
Arguments
Authentication
Vault Credentials
Colorized Output
Extra Parameters
Inventory
Using Jenkins Environment Variables
Vault
Examples
Arguments
Vault Credentials
Open Issues
Changelog

== Global Configuration

Ansible needs to be on the PATH for the build job in order to be used. This can be done through either Jenkins Global Tool Configuration or including Ansible on the OS User PATH variable.

== Global Tool Configuration
Configuring Ansible through the Global Tool Configuration in Jenkins (Jenkins → Manage Jenkins → Global Tool Configuration) allows for multiple Ansible installations to be present and used by different Jenkins jobs.

Click Add Ansible
Configure the name and path

Name

Symbolic name used to identify a specific Ansible installation when multiple installations are configured

Path to ansible executables directory

Directory containing the ansible, ansible-playbook, and ansible-vault binaries

Repeat for any additional desired installations
 

== OS User PATH
Ansible can also be added to the PATH user used by the Jenkins executor instead of configured through Global Tool Configuration. This is done through normal OS tools outside of Jenkins and is not covered by this guide.

 
== Adhoc
Adhoc commands allow for simple operations to be done without writing a full playbook. This allows for a convenient way of doing quick tasks with Ansible.

== Examples
Scripted
Due to JENKINS-43782 and JENKINS-49056, adhoc commands cannot be run with a pipeline job.

Declarative
 

== Arguments
See also jenkins.io documentation.

Ansible installation	 	Ansible installation to use for the playbook invocation
Host pattern	 	The host pattern to manage. See Ansible Patterns for details.
Module	 	CLI arg: -m
Module arguments or command to execute	 	CLI arg: -a
Inventory file or host list	 	
See the Inventory section for additional details.

CLI arg: -i

Inventory Inline content	 	
See the Inventory section for additional details.

CLI arg: -i

== Credentials	 	
The Jenkins credential to use for the SSH connection. See the Authentication section for additional details.

Vault Credentials	 	
The Jenkins credential to use as the vault credential. See the Vault Credentials section for additional details.

CLI arg: --vault-password-file

sudo	 	CLI arg: -s
sudo user	 	CLI arg: -U
Number of parallel processes	 	CLI arg: -f
Check host SSH key	 	
Toggle checking of the host key.

Sets the environment variable ANSIBLE_HOST_KEY_CHECKING, similar to the recommendations for running with Vagrant.

Unbuffered stdout	 	
Toggle buffering of standard out.

Sets the environment variable PYTHONUNBUFFERED, similar to the recommendations for running with Vagrant.

== Colorized stdout	 	
Toggle color codes in console text. See Colorized Output section for example usage.

Sets the environment variable ANSIBLE_FORCE_COLOR, similar to the recommendations for running with Vagrant.

Extra Variables	 	CLI arg: -e
Additional parameters	 	String passed to the Ansible Command Line invocation as-is
 

== Playbook
 

Ansible playbook operations can be run with the plugin. The plugin provides several conveniences such as easily using credentials from the Jenkins credential store, unbuffered color output in the log, etc. 

Examples
Scripted
Jenkinsfile
ansiblePlaybook credentialsId: 'private_key', inventory: 'inventories/a/hosts', playbook: 'my_playbook.yml'
 

Declarative
Jenkinsfile
ansiblePlaybook(credentialsId: 'private_key', inventory: 'inventories/a/hosts', playbook: 'my_playbook.yml')
 

Additional scripted and declarative pipeline examples can be found on the plugin's GitHub readme.

Arguments
jenkins.io documentation

Ansible installation	installation	Ansible installation to use for the playbook invocation
Playbook path	playbook	Mandatory. The name of the playbook to run.
Inventory file or host list	inventory	
See the Inventory section for additional details.

CLI arg: -i

Inventory Inline content	inventoryContent	
See the Inventory section for additional details.

CLI arg: -i

Credentials	credentialsId	
The Jenkins credential to use for the SSH connection. See the Authentication section for additional details.

Vault Credentials	vaultCredentialsId	
The Jenkins credential to use as the vault credential. See the Vault Credentials section for additional details.

CLI arg: --vault-password-file

sudo	sudo	CLI arg: -s
sudo user	sudoUser	CLI arg: -U
Host subset	limit	CLI arg: -l
Tags to run	tags	CLI arg: -t
Tags to skip	skippedTags	CLI arg: --skip-tags
Task to start at	startAtTask	CLI arg: --start-at-task
Number of parallel processes	forks	CLI arg: -f
Check host SSH key	hostKeyChecking	
Toggle checking of the host key.

Sets the environment variable ANSIBLE_HOST_KEY_CHECKING, similar to the recommendations for running with Vagrant.

Colorized stdout	colorized	
Toggle color codes in console text. See Colorized Output section for example usage.

Sets the environment variable ANSIBLE_FORCE_COLOR, similar to the recommendations for running with Vagrant.

Additional parameters	extras	String passed to the Ansible Command Line invocation as-is
Extra Variables	extraVars	CLI arg: -e
Refer to the ansible-playbook manual page for details on how each command line argument is interpretted.

== Authentication
SSH Keys
SSH keys are the recommended authentication method for SSH connections. The plugin supports the credential type "SSH Username with private key" configured in the Jenkins credential store through the SSH crendentials plugin.

Password
Even if using SSH keys is recommended authentication method, password authentication may sometimes be required. The plugin has supported password based authentication since 0.3.0. When using password based authentication, the sshpass binary is expected to be on the PATH. The plugin supports the credential type "Username with password" configured in the Jenkins credential store through the SSH crendentials plugin.

== Vault Credentials
Vault credentials can be setup in the Jenkins credential store as either a "Secret text" or a "Secret file". 

== Colorized Output
The AnsiColor plugin is needed for colorized console output. Once installed, colorized output can be enabled with the argument "colorized: true".

Jenkinsfile
ansiColor('xterm') {
    ansiblePlaybook(
        playbook: 'path/to/playbook.yml',
        inventory: 'path/to/inventory.ini',
        credentialsId: 'sample-ssh-key',
        colorized: true)
}


Extra Parameters
Extra parameters is a string passed to the Ansible Command Line invocation as-is and can be useful for arguments occasionally added to an invocation at runtime, such as tags and host limits.

Inventory
File
A string path to the inventory file to use with the playbook invocation.

Inline
The provided content is used as the content of the inventory file for the playbook invocation.

== Using Jenkins Environment Variables
Jenkins environment variables can be accessed from within an Ansible playbook. The Jenkins variables are injected as environment variables making them available through the Ansible lookup plugin.

The following Ansible playbook accesses the Jenkins BUILD_TAG variable:

playbook.yml
---
- hosts: example
  tasks:
    - debug: msg="{{ lookup('env','BUILD_TAG') }}"
 

== Vault
Most Ansible Vault operations can be performed with the plugin. Interactive operations such as create, edit, and view are not supported through the plugin. One use case for this enabling developers to encrypt secret values while keeping the vault password a secret.

Examples
Scripted
Encrypts a File
ansibleVault action: 'encrypt', input: 'vars/secrets.yml', vaultCredentialsId: 'ansible_vault_credentials'
Encrypts a String
ansibleVault action: 'encrypt_string', content: 'secret_content', vaultCredentialsId: 'ansible_vault_credentials'
Declarative
Jenkinsfile
ansibleVault(action: 'encrypt', input: 'vars/secrets.yml', vaultCredentialsId: 'ansible_vault_credentials')
Jenkinsfile
ansibleVault(action: 'encrypt_string', content: 'secret_content', vaultCredentialsId: 'ansible_vault_password')
 

Arguments
See also jenkins.io documentation.

Ansible installation	installation	Ansible installation to use for the vault operation
Action	action	Mandatory. The name of the action to use. Interactive operations such as create, edit, and view are not supported.
Vault Credentials	vaultCredentialsId	
The Jenkins credential to use as the vault credential. See the Vault Credentials section for additional details.

CLI arg: --vault-password-file

New Vault Credentials	newVaultCredentialsId	
The Jenkins credential to use as the vault credential. See the Vault Credentials section for additional details.

CLI arg: --new-vault-password-file

Content	content	The content to encrypt with the encrypt_string action
Input	input	The file to encrypt with the encrypt action
Output	output	CLI arg: --output
Vault Credentials
Vault credentials can be setup in the Jenkins credential store as either a "Secret text" or a "Secret file". 


