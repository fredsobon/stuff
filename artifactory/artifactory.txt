

= creation de token pour artifactory : ==

on va pouvoir créer un token pour uploader dans artifactory :


 # curl -u lapin:nain01 "http://localhost:8081/artifactory/api/security/token" -d "username=lapin" -d "scope=member-of-groups:lapin-admin"
{
  "scope" : "member-of-groups:lapin-admin api:*",
  "access_token" : "eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiI3anJlQ253cXltbERwN0o2bjFlMjVwZlJhS01KcE5yVWVBTTlFVzRKQWI4In0.eyJzdWIiOiJqZi1hcnRpZmFjdG9yeUBlZDZiNzFmZC1jNzllLTQ2YzAtYmFlZi1jNTBkZjk0OTc3N2VcL3VzZXJzXC9mLnNvYm9uIiwic2NwIjoibWVtYmVyLW9mLWdyb3Vwczpmci5pc3IuZ2cgYXBpOioiLCJhdWQiOiJqZi1hcnRpZmFjdG9yeUBlZDZiNzFmZC1jNzllLTQ2YzAtYmFlZi1jNTBkZjk0OTc3N2UiLCJpc3MiOiJqZi1hcnRpZmFjdG9yeUBlZDZiNzFmZC1jNzllLTQ2YzAtYmFlZi1jNTBkZjk0OTc3N2UiLCJleHAiOjE1NjExMzIzMTksImlhdCI6MTU2MTEyODcxOSwianRpIjoiODBjNDRhOWItYTlhOC00MzM5LWJhMWYtOTQ5ZjFiODJiNmM4In0.DE-V5CVIwvDY0CoqFH_aaTlN8Jp-Rje6l2xpHGlLR86f71bMXD2J0j4qWYZv1PHTZ3TNj7PsqcsSWWREIcOUYusQxGnWflQOmCn5E8QqSCHCB3gNl3SIAqhaZgaRP14LfJn0rfHz_to59BdanwVDoLdzUFhEfczaKOvMNCDmgrbkN3Qbu5sQC0L55SHEQrmgIBcFTlrg6CcFgIGvdSpZxAlInu8_E2kwJajpMDKOfYwqKVpFjCt2xGw_PdkoOCegnwmYWYbrlPmctZMqeTR2JyAojS5yUphl8FzexKdj3sxRUeQGcKLzd0p4SmQNULqEiWjUDIQow9GqWxDqil_A4Q",
  "expires_in" : 3600,
  "token_type" : "Bearer"



== mise a jour de la conf de l'appli :

on peut modifier la conf artifactory : pour la mise a jour il faut l'injecter en http  via un post : 



- on peut faire un dump du fichier de conf chargé par artifactory : on le sauvegarde dans un rep 

curl -u  lapin -X GET -H "Accept: application/xml" http://localhost:8081/artifactory/api/system/configuration | tee /tmp/config.xml

- on fait nos modifs
vi /tmp/config.xml

- on reinjecte notre conf modifiée : 
curl -u lapin  -X POST -H "Content-type:application/xml" -d @/tmp/config.xml http://localhost:8081/artifactory/api/system/configuration



= utilisation d'artifactory comme repo images docker  :=

on va pouvoir setter artifactory comme registry 

on peut pull une image depuis un repo externe et ensuite appeller cette image depuis notre infra 
ex: ici on pull une image depuis le repo kibana 

docker.elastic.co/kibana/kibana mais en passant par notre artifactory qui sert de proxy  
docker pull artifact-docker-mon-repo.net/kibana/kibana:7.3.0


on peut pull une image d'un repo la modifier et la pousser dans artifactory egalement : il faudra donc la pull, tagger la nouvelle image et la push dans artifactory :

docker pull gcr.io/google-containers/conformance:v1.15.0
docker tag gcr.io/google-containers/conformance:v1.15.0 artifact-docker-remote.lapin.net/google_containers/conformance:v1.15.0
docker push artifact-docker-remote.lapin.net/google_containers/conformance:v1.15.0



= upload de fichier / artifact depuis notre poste : =

on peut uploader un fichier dans une arbo d'artifactory en cli.
Si on précise en repertoire qui n'existe pas dans l'arbo initiale , artifactory la créee :

ex: ici on va uplader un fichier calico.yaml  dans un rep calico qui n'existe pas dans notre arbo lapin : le repertoire sera crée et le fichier uploadé à l'interrieur :

boogie$ curl -u bob:xxx -T calico.yaml "https://artifact.lapin.net/artifactory/lapin/calico/calico.yaml"                   [☸ kube-infra:fso]
{
  "repo" : "lapin",
  "path" : "/calico/calico.yaml",
  "created" : "2019-10-3T17:52:12.141+01:00",
  "createdBy" : "bob",
  "downloadUri" : "https://artifact.lapin.net/artifactory/lapin/calico/calico.yaml",
  "mimeType" : "text/plain",
  "size" : "2082",
  "checksums" : {
    "sha1" : "48582zzee7b53ed440a2031d85f938229a500",
    "md5" : "e581f8fdfdfdfd727478ad7a573f1f18c4f8",
    "sha256" : "0sszsz9028fe2caac73cf160611fe5beb5bb211774d2823"
  },
  "originalChecksums" : {
    "sha256" : "066ca10839dddfdddssddsdd787b9028fe2caac73cf160611fe5beb5bb211774d2823"
  },
  "uri" : "https://artifact.lapin.net/artifactory/lapin/calico/calico.yaml"

