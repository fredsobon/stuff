=== git udemy fr ===

= intro : 
on va versionnier : historiser notre code.
historiquement on copiait nos fichiers pour backuper. il n'y avait pas de metadata (auteur, date ....).On a ensuite ajouter des bdd. Viennent ensuitee les veritables vcs : on centralise les projets sur un repo central. Si on a le serveur hs : pls personne ne peut travailler.
On va ensuite avoir les systeme distribuer : on recupere tous les projets en local sur notre poste : on en dépend plus d'un seul server.
git : libre et distribué.
gihub heberge la plupart des projets de code.

= set up : 

linux :
sudo apt install git-all ( on install git et les applis graphiques rattachées à git.)

config : 
on va renseigner le nm et mailbox de notre conf git 

git config --global 

> on configure l'ensemble des infos pour nos projets 

git config --global user.name="boogie"
git config --global user.mail="boogie@lapin.net"

check :

on peut examiner la conf global de notre setting git avec : 
git config --global --list 

user.name=boogie
user.email=boogie@lapin.net
core.editor=vim
diff.tool=meld
alias.co=checkout
alias.br=branch
alias.st=status
alias.unstage=reset --soft HEAD^
alias.com=commit
alias.com-am=commit -am

on voit dans notre example que la conf globale comporte des éléments supplementaires comm des alias , l'editeur de texte par default utilisé avec git , l'outil de diff utilisé dans git ...

git sans params nous donne l'équivalent de git --help

= utilisation de base de git : 


