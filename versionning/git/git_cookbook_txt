=== git cookbook and more details ===

== desc ==

git va stocker l'intégralité des commits dans un arbre.
git utilise
-> des branches
-> HEAD  qui represente le commit actuel de la branche sur laquelle on est.
-> des fichiers
-> des repertoires (tree dans le contexte  git)
-> des commits
-> des tags

on peut examiner les differents objects HEAD / tree / blob ( aka file) / branchs/ tags :

git cat-file -p HEAD    
tree 2a09133c3ed60e1cb87def7d320cf4bd0cb80b42
parent 679148b378b458ee91aee6ca594c0b7c25cf2664
author lapin <lapin@lapin.com> 1536528134 +0200
committer lapin <lapin@lapin.com> 1536528134 +0200

update file 

on peut utiliser un numero de commit en argument :

git cat-file -p 679148b
tree 4ba7fd81adfd4dcdbe349ff33e9ff944457f9eb4
parent e1409f6b36d5208d12c45b304af9c630f543c7e8
author lapin <lapin@lapin.com> 1536495188 +0200
committer lapin <lapin@lapin.com> 1536495188 +0200

delete old file 


Il est possible de passer en arguments le nom de l'arbre (tree) visible dans les sorties précédentes :

 git cat-file -p c9ca10c777d0afa2fe5e485a23f5db9e6e8e48db
 100644 blob 7308740a082ff603be615d691a9c3b4d382068f8 TODO
 040000 tree 7c1deb5b7bcf8adf554883a63bf6f5768379d299 bash
 040000 tree c8d957261401faf95dbf0c60f618245894efc8a9 bck
 040000 tree a9230cc4ba86cfdaf8469910716692a9025dad33 buffer
 040000 tree 626aad316c37c99050b819d08f88e2ad4e2d2a26 cloud_automation
 040000 tree eb981dcef8f459fa647bdbfcc982cd073447b2de cnam
 100644 blob b9698f9843ec38252882aaf2bb78d8904622448a courses.txt
 040000 tree a332cc5d795ada050addc1c558be09a8686f5354 dash
 040000 tree 6409c46fbd98a11bcf629fbb982b6154379d713c dev_integ_deploy
 040000 tree 04150a5ae1a09eca2a5024b64fd8ef6c46f93e27 doc_tips
 040000 tree d2201626c4938e1532ccff0aa2d26a602ce61540 hardware_drivers_modules_kernel
 100644 blob b3c8288ba59cbfe7be38cd1529f7939703a8795e lftp.txt
 ..
 ...

on examine d'apres les infos precedentes un fichier / blob par ex :

git cat-file -p 7308740a082ff603be615d691a9c3b4d382068f8

== work on it : ===

-> network / secu : 
net : lan subnet creation / config / lacp / jumbo frame
redondancy : failover / HA
..
....

on voit que les objets sont reliés entre eux : les fichiers relies aux arbres relies au commit 

on ne peut pas éditer une branche avec la commande git cat-file 
mais on peut examiner la branche au sein même de notre repertoire .git :
ex : ici on peut voir dans le rep différentes branches :

cat .git/refs/heads/
web         production         
php_fpm      scala        
on peut examiner 
 cat .git/refs/heads/production 
 e83a937b6be45a6d1f7fdecf480276abc2c91708

 on peut vérifier que la valeur correspond bien au dernier commit :
 git log -1
 commit e83a937b6be45a6d1f7fdecf480276abc2c91708
 Merge: c356a3227 2bfd43d2f
 Author: lapin <lapin@lapin.com>
 Date:   Tue Sep 04 05:39:36 2018 +0200

     Merge branch 'Feature-stuff' into 'production'
         
             Feature-stuff
                
on peut egalement voir que notre HEAD pointe bien sur la branche actuelle :

cat .git/HEAD 
ref: refs/heads/production

L'object tag : il est de  trois sorte : le label, l'annoté et le signé 
ex :

git tag 
v0.1
v1.0


la commande git  cat-file n'est pas tres utilisée mais peut être utile pour debugguer.
on peut utiliser d'autre commandes :

exemples :

git ls-tree HEAD 
100644 blob 0d36adf66520314dd6efbe26783024b20848c45c  .gitignore
100644 blob f1f91313169e9876a466b1cc13acf36bb133bb50  .gitlab-ci.yml
040000 tree 0126691294d97d61b1cf7230eb4e9b3b13af3fa9  activemq
040000 tree 60f5f57f6cd9be0a93cbe04f3e6157312a35e84c  ansible
040000 tree cc02532b784746b58aa9c17037b39fcc6083b527  apache
..
...


git show 0d36adf66520314dd6efbe26783024b20848c45c
*/junit
*/log
*/results.xml
*/spec/fixtures


== Les trois stages : ==










