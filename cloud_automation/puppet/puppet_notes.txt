=== puppet notes :

= install 
pour notre lab on install dans un premier temps les packets suivants :
sudo apt-get install puppetmaster puppet-lint vim-puppet
Les packets suivant sont suggérés :
Paquets suggérés :augeas-doc mcollective-common augeas-tools ruby-rrd apache2 | nginx puppet-el ruby-ldap ruby-stomp stompserver ruby-builder-doc

config de vim-puppet :
on peut examiner la gestion des plugins vim dans : 
man vim-addon-manager
pour installer le plugin puppet :
vim-addon-manager install  puppet
root@x61-boogie:~# vim-addon-manager install  puppet
Info: installing removed addon 'puppet' to /root/.vim
on peut examiner le repertoire du user dédié :
root@x61-boogie:~# vi .vim/ftplugin/puppet.vim
pour avoir le detail du plugin install :
vim-addon-manager show 

root@x61-boogie:~# vim-addon-manager show
Addon: puppet
Status: installed
Description: Syntax highlighting for puppet
Files:
 - ftdetect/puppet.vim
 - ftplugin/puppet.vim
 - indent/puppet.vim
 - syntax/puppet.vim
...

Pour une install globale sur le system :
 vim-addons install puppet -w
Info: installing removed addon 'puppet' to /var/lib/vim/addons
un check nous montre le resultat :
root@x61-boogie:~# vim-addons
# Name                     User Status  System Status 
editexisting                removed       removed       
justify                     removed       removed       
matchit                     removed       removed       
puppet                      installed     installed     


2 / description du run :
la node va charger ses facts puis faire une requette au master qui va examiner et compiler un catalogue qu'il va envoyer au client . Celui ci depile les changements ( enregistre le run dans /var/lib/client_data ) . le resulat du run est envoyé au master et pourra etre consulter via des outils (puppetdb etc ...)

3 / base :
a l'install issue du package : la conf est située dans /etc/puppet/
boogie@x61-boogie:~$ ls /etc/puppet/
auth.conf              fileserver.conf  puppet.conf
etckeeper-commit-post  manifests
etckeeper-commit-pre   modules

on va creer un fichier de base obligatoire : le site.pp IMPERATIF qui se situe dans le repertoire manifest :
ex ici on creer juste un fichier avec une notif pour tous les nodes :

cat /etc/puppet/manifests/site.pp 
node default {
  notify{"run for default node:" }
}

On peut utiliser l'utilitaire : puppet-lint pour tester notre code.
puppet-lint site.pp 
WARNING: double quoted string containing no variables on line 2

on peut specifier des noms de nodes particuliers et utiliser des regexp :
ex : 
cat site.pp 
node default {
  notify{"run for default node": }
}

node  /^x61/ {
  notify{"thinkpad dedicated run :)": }
}
