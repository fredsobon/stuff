=== notes according learning puppet 4 (oreilly book) ===

Introduction :

puppet s'occupe de la configuration des ressources d'un systeme : user, package, service, data, process.Puppet s'occupe de la conformité du système en fonction de l'état désiré.Il combine une hierarchie flexible de config de données avec des données particulières pour un node précis.On peut donc s'en servir pour :
-> déployer des nouvelles applis /composants
-> effectuer des mise à jour applicatives / secu 
-> adapter des nouvelles technos à des vieux systèmes.
-> reduire l'effort de changement sur un grand nombre de machine.
->etc ...
On doit juste utiliser le language déclaratif de puppet qui nous sert à décrire l'état dans le quel on souhaite avoir notre systeme. On veut que le résultat de notre action de config soit systematiquement identique à notre définition.
La specification doit décrire l'état désiré et laisser la résolution de ces tâches à un interpréteur.

= Fonctionnement de puppet :

Tous les nodes qu'ont controle ont un puppet agent : cet agent évalue et et applique les manifests puppet : les fichiers de configuration de puppet qui contienne la description de l'etat désiré du node.
L'agent evalue l'etat de chaque composant dans le manifest et determine si un changement est à faire ou pas.
Si un chagement est à faire l'agent le fait et enregistre le changement dans un journal.
Si puppet est configuré avec un serveur central de managment de config : le serveur envoit les données de conf au serveur qui à son tour va renvoyer un catalogue des changements à effectuer si besoin afin de toujours être dans l'etat désiré.  

On peut biensur agir finement et ne passer des changements qu'a un certain nombre de machinnes grace à des systemes de clasification. (ex : hostname, os , puppet version etc ...)
Les agents puppet peuvent être invoqués avec des tag speciaux. Les nodes recoivent leur catalogue individuellement et ne sont pas soumi a des filles d'attente.Un rapport est généré à chaque run .Il est possible d'utiliser un orchestrateur pour piloter un grand nombre de node.

page 35


