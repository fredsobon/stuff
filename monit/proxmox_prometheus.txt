== monitoring proxmox server dans prometheus / grafana ==


https://blog.zwindler.fr/2020/01/06/proxmox-ve-prometheus/
https://github.com/znerol/prometheus-pve-exporter



= installation de l'exporteur prometheus sur les serveurs proxmox :

on creer un rep qui va contenir notre appli, on install virtualenv python pour ne pas parasiter notre os avec la / les lib installées avec notre binaire puis on install l'exporteur :

mkdir /opt/prometheus-pve-exporter
apt install virtualenv
virtualenv /opt/prometheus-pve-exporter
/opt/prometheus-pve-exporter/bin/pip install prometheus-pve-exporter
# on test c'est ok :
/opt/prometheus-pve-exporter/bin/pve_exporter --help
usage: pve_exporter [-h] [config] [port] [address]

positional arguments:
  config      Path to configuration file (pve.yml)
  port        Port on which the exporter is listening (9221)
  address     Address to which the exporter will bind

optional arguments:
  -h, --help  show this help message and exit


= on crée un groupe et un user dedié sur proxmox : 

ce user permettra l'acces aux metriques via l'api proxmox et c'est ce user que l'exporteur prometheus utilisera pour recuperer les metriques de proxmox et les exposer au format openmetrics que prometheus viendra scraper .

root@boogie-hypervisor:/opt# pveum groupadd monitoring -comment 'Monitoring group'
root@boogie-hypervisor:/opt# pveum aclmod / -group monitoring -role PVEAuditor
root@boogie-hypervisor:/opt# pveum useradd pve_exporter@pve
root@boogie-hypervisor:/opt# pveum usermod pve_exporter@pve -group monitoring
root@boogie-hypervisor:/opt# pveum passwd pve_exporter@pve
Enter new password: ************
Retype new password: ************

on cree le fichier de conf qu'on renseigne avec nos infos user :

mkdir -p /usr/share/pve_exporter/
cat > /opt/prometheus-pve-exporter/pve_exporter.yml << EOF
default:
    user: pve_exporter@pve
    password: monitoring#1
    verify_ssl: false
EOF

On test maintenant le demarrage de l'appli avec le fichier de conf en argument :
root@boogie-hypervisor:/opt/prometheus-pve-exporter# /opt/prometheus-pve-exporter/bin/pve_exporter /opt/prometheus-pve-exporter/pve_exporter.yml
 * Running on http://localhost:9221/ (Press CTRL+C to quit)

C'est ok : l'appli démarre: on va créer un service systemd pour le démarrage auto de l'exporteur : 

cat > /etc/systemd/system/pve_exporter.service << EOF
[Unit]
Description=Proxmox VE Prometheus Exporter
After=network.target
Wants=network.target
[Service]
Restart=on-failure
WorkingDirectory=/opt/prometheus-pve-exporter/
ExecStart=/opt/prometheus-pve-exporter/bin/pve_exporter /opt/prometheus-pve-exporter/pve_exporter.yml 9221 192.168.0.7  <<< on renseigne l'ip de notre serveur proxmox(aussi accessible par votre serveur Prometheus)
[Install]
WantedBy=multi-user.target
EOF


on peut tester depuis un navigateur ou en cli c'est ok notre exporteur fonctionne :

root@boogie-hypervisor:/opt/prometheus-pve-exporter# curl http://192.168.0.7:9221//pve?target=192.168.0.7 |head
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  5248  100  5248    0     0  30690      0 --:--:-- --:--:-- --:--:-- 30511
# HELP pve_node_info Node info
# TYPE pve_node_info gauge
pve_node_info{id="node/boogie-hypervisor",ip="192.168.0.7",level="",local="1",name="boogie-hypervisor",nodeid="0"} 1.0
# HELP pve_up Node/VM/CT-Status is online/running
# TYPE pve_up gauge
pve_up{id="node/boogie-hypervisor"} 1.0
pve_up{id="qemu/103"} 1.0
pve_up{id="qemu/102"} 1.0
pve_up{id="qemu/100"} 0.0
pve_up{id="qemu/101"} 1.0


===  containerisation de l'appli : 

on va containeriser le pve exporter de manière à pouvoir l'executer (comme c'est prévu depuis un autre serveur qu'un membre du cluster proxmox) 

cat Dockerfile
FROM python:3-alpine

RUN \
  pip install --no-cache-dir prometheus-pve-exporter && \
  mkdir /config

COPY ./pve.yml /config/pve.yml
WORKDIR /config
VOLUME /config

ENTRYPOINT ["/usr/local/bin/pve_exporter"]
CMD ["pve.yml"]


cat pve.yml
default:
  user: bob@pve
  password: blabla
  verify_ssl: false


docker build . -t prometheus-pve-exporter
docker tag prometheus-pve-exporter:latest bob/prometheus-pve-exporter:0.1
docker push bob/prometheus-pve-exporter:0.1

on peut tester en local sur un node proxmox :

docker pull bob/prometheus-pve-exporter:0.1
0.1: Pulling from bob/prometheus-pve-exporter
df20fa9351a1: Already exists
36b3adc4ff6f: Already exists
7031d6d6c7f1: Already exists
81b7f5a7444b: Already exists
0f8a54c5d7c7: Already exists
eb01c84c0422: Pull complete
e8ec9b2f3ba6: Pull complete

 docker run -v $(pwd)/pve.yml:/config/pve.yml -p 9221:9221 bob/prometheus-pve-exporter:0.1
 * Running on http://localhost:9221/ (Press CTRL+C to quit)
192.168.0.20 - - [27/Jun/2020 09:13:57] "GET /pve?target=192.168.0.7 HTTP/1.1" 200 -
192.168.0.20 - - [27/Jun/2020 09:17:32] "GET /pve?target=192.168.0.7 HTTP/1.1" 200 -

depuis un navigateur ou en curl on a les infos :
curl http://192.168.0.7:9221//pve?target=192.168.0.7 |head
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  5249  100  5249    0     0  40376      0 --:--:-- --:--:-- --:--:-- 40376
# HELP pve_up Node/VM/CT-Status is online/running
# TYPE pve_up gauge
pve_up{id="node/boogie-hypervisor"} 1.0
pve_up{id="qemu/103"} 1.0
pve_up{id="qemu/101"} 1.0
pve_up{id="qemu/100"} 0.0
pve_up{id="qemu/102"} 1.0


on est pas obligé d'avoir le fichier de conf contenant les credentials en local sur le node qu'on test ..si les infos correctes sont insérées au build dans l'image on peut lancer directement : 
docker run  -p 9221:9221 fredsobon/prometheus-pve-exporter:0.1
 * Running on http://localhost:9221/ (Press CTRL+C to quit)
192.168.0.7 - - [27/Jun/2020 09:27:28] "GET //pve?target=192.168.0.7 HTTP/1.1" 200 -

la réponse sera identique : 
curl http://192.168.0.7:9221//pve?target=192.168.0.7 |head
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  5247  100  5247    0     0  38866      0 --:--:-- --:--:-- --:--:-- 38866
# HELP pve_up Node/VM/CT-Status is online/running
# TYPE pve_up gauge
pve_up{id="node/boogie-hypervisor"} 1.0
pve_up{id="qemu/102"} 1.0
pve_up{id="qemu/100"} 0.0
pve_up{id="qemu/101"} 1.0
pve_up{id="qemu/103"} 1.0
# HELP pve_disk_size_bytes Size of storage device
# TYPE pve_disk_size_bytes gauge

