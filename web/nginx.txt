#### Nginx : ####

## Specs :
Nginx utilise des sockets asynchrones de connexion.Un process nginx par "core" peut gérer des milliers de connexions http, avec une consommation cpu et mémoire bien moins élevée. Les fichiers de conf et l'optimisation de la config est bien plus simple qu'apache.

apt-get install nginx
yum install nginx
*prerequis : 

-gcc est obligatoire ( nginx est en c)
root@centos67 ~]# gcc
gcc: no input files   >>> c'est ok le packet est installé. 

-pcre :La librairie PCRE pour les regexps (pour les rewrites etc ....) 
[root@centos67 ~]# yum install pcre pcre-devel

-zlib : cette librairie permet d'avoir les algos compression 
[root@centos67 ~]# yum install zlib zlib-devel

- openssl : implémentation obligatoire pour ssl et tsl :
[root@centos67 ~]# yum install openssl openssl-devel

On peut voir les options avec lesquelles nginx est compilé : 
nginx -V

On peut avoir tous les modules d'installés et de configurés via les packages : ex geoip, libgd, libxml2, libxslt

Nginx peut servir de proxy mail également.

Droits d'accès : 
le process "master" doit être démarré en root sinon pas d'acces au port 80 et 443
le process "worker" va être lancé avec le compte user défini dans le fichier de conf.

Le fichier de conf a toujours la priorité maximale ( même si on a compilé le packet à la main ).

Test de config :
[root@centos67 ~]# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

Il est possible de tester un fichier de conf particulier :
[root@centos67 ~]# nginx -t -c /root/nginx.conf 
nginx: the configuration file /root/nginx.conf syntax is ok
nginx: configuration file /root/nginx.conf test is successful


###  configuration basique :

##  configuration des directives

fichier de conf /etc/nginx/nginx.conf 

/!\ toutes les directives finissent par un ";" 

# Directives principales : 

# utilisateur. On peut rajouter un deuxieme nom celui du groupe autoriser à faire tourner le process : 
user              nginx;  

# nginx fonctionne avec un "single" process
worker_processes  1; 

# On peut avoir une inclusion de conf via un fichier externe : dans ce cas c'est comme si l'on avait l'intégration du fichier ( ce mecanisme est récursif on peut avoir l'incusion de fichiers de fichiers ....) 

NB: le globbing fonctionne pour les "include".Ex include sites/*.conf; > Ok


nginx.conf :

    user        nginx nginx;
    worker_processes  4;
    include     other_settings.conf;

other_settings.conf :
    error_log logs/error.log;
    pid logs /nginx.pid;        
 
Le résultat final sera vu comme tel pour nginx : 

    user              nginx nginx;
    worker_processes  4;
    include     other_settings.conf;
    error_log logs/error.log;
    pid logs /nginx.pid;        

Les fichiers de base fournis  à l'install de nginx peuvent être regroupés et renommés sans souci.

## Block de directives : 

Les blocs de directives sont apportés avec les modules : l'activation d'un nouveau module forme 

>>> 58 nginx http server







## exemple de fichier de conf : 

user              nginx;
worker_processes  1;




# path des errors logs :
error_log  /var/log/nginx/error.log;

# 
pid        /var/run/nginx.pid;

# 
events {
    worker_connections  1024;
}

#   
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Load config files from the /etc/nginx/conf.d directory
    # The default server is in conf.d/default.conf
    include /etc/nginx/conf.d/*.conf;
}



