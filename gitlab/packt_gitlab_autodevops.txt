=== notes packt autodevops with gitlab : ===

== notes install minikube : ===

minikube start --kubernetes-version=v1.20.0 --cpus 4  --disk-size 20g --memory 8192M
minikube addons enable ingress
http://127.0.0.1:46653/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/

utilisation d'une conf light pour tourner sur minikube :

curl --output values.yaml "https://gitlab.com/gitlab-org/charts/gitlab/raw/master/examples/values-minikube-minimum.yaml"

modification de l'ip du fichier par l'ip de notre minikube :
minikube node list           
minikube	192.168.39.112  <<<< ip qu'on renseigne dans le fichier de value

minikube ip
192.168.39.112

fichier d'install minimal pour minikube :

cat minimal_minikube.yaml     
# values-minikube.yaml
# This example intended as baseline to use Minikube for the deployment of GitLab
# - Minimized CPU/Memory load, can fit into 3 CPU, 6 GB of RAM (barely)
# - Services that are not compatible with how Minikube runs are disabled
# - Some services entirely removed, or scaled down to 1 replica.
# - Configured to use 192.168.99.100, and nip.io for the domain

# Minimal settings
global:
  ingress:
    configureCertmanager: false
    class: "nginx"
  hosts:
    domain: 192.168.39.112.nip.io
    externalIP: 192.168.39.112
  # Disable Rails bootsnap cache (temporary)
  rails:
    bootsnap:
      enabled: false
  shell:
    # Configure the clone link in the UI to include the high-numbered NodePort
    # value from below (`gitlab.gitlab-shell.service.nodePort`)
    port: 32022
# Don't use certmanager, we'll self-sign
certmanager:
  install: false
# Use the `ingress` addon, not our Ingress (can't map 22/80/443)
nginx-ingress:
  enabled: false
# Save resources, only 3 CPU
prometheus:
  install: false
gitlab-runner:
  install: false
# Reduce replica counts, reducing CPU & memory requirements
gitlab:
  webservice:
    minReplicas: 1
    maxReplicas: 1
  sidekiq:
    minReplicas: 1
    maxReplicas: 1
  gitlab-shell:
    minReplicas: 1
    maxReplicas: 1
    # Map gitlab-shell to a high-numbered NodePort to support cloning over SSH since
    # Minikube takes port 22.
    service:
      type: NodePort
      nodePort: 32022
registry:
  hpa:
    minReplicas: 1
    maxReplicas: 1

on ajoute le repo gitlab 
helm repo add gitlab https://charts.gitlab.io
on lance le setup en passant en argument le fichier minimal dl et modifié auparavant :
helm install gitlab -f minimal_minikube.yaml gitlab/gitlab                                                                                     [☸ |minikube:default]

W0206 12:35:13.131654  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
W0206 12:35:13.133515  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
W0206 12:35:13.135040  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
W0206 12:35:40.643249  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
W0206 12:35:40.653756  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
W0206 12:35:40.653795  130195 warnings.go:70] extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
NAME: gitlab
LAST DEPLOYED: Sat Feb  6 12:35:10 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
NOTES:
NOTICE: The resource requests have increased for the Webservice and Sidekiq charts.
    For more information on Webservice resources, see https://docs.gitlab.com/charts/charts/gitlab/webservice/index.html#resources
    For more information on Sidekiq resources, see https://docs.gitlab.com/charts/charts/gitlab/sidekiq/index.html#resource
    Related merge request: https://gitlab.com/gitlab-org/charts/gitlab/-/merge_requests/1634

    To restore the original resource specifications:
    --set gitlab.sidekiq.resources.requests.cpu=50m
    --set gitlab.sidekiq.resources.requests.memory=650M
    --set gitlab.webservice.resources.requests.memory=1.5G

WARNING: Automatic TLS certificate generation with cert-manager is disabled and no TLS certificates were provided. Self-signed certificates were generated.

You may retrieve the CA root for these certificates from the `gitlab-wildcard-tls-ca` secret, via the following command. It can then be imported to a web browser or system store.

    kubectl get secret gitlab-wildcard-tls-ca -ojsonpath='{.data.cfssl_ca}' | base64 --decode > gitlab.192.168.39.112.nip.io.ca.pem

If you do not wish to use self-signed certificates, please set the following properties:
  - global.ingress.tls.secretName
  OR
  - global.ingress.tls.enabled (set to `true`)
  - gitlab.webservice.ingress.tls.secretName
  - registry.ingress.tls.secretName
  - minio.ingress.tls.secretName


Help us improve the install experience, let us know how we did with a 1 minute survey:
https://gitlab.fra1.qualtrics.com/jfe/form/SV_6kVqZANThUQ1bZb?installation=helm&release=13-8

on renseigne dans notre fichier host le record 

192.168.39.112 gitlab.192.168.39.112.nip.io


on peut recup le certif auto signé et l'ajouter dans notre magasin de certifs du navigateur :

 kubectl get secret gitlab-wildcard-tls-ca -ojsonpath='{.data.cfssl_ca}' | base64 --decode > gitlab.192.168.39.112.nip.io.ca.pem

 on va ensuite recupérer les créentials générésà l'install pour se logger sur notre browser : 

kubectl get secret <name>-gitlab-initial-root-password -ojsonpath='{.data.password}' | base64 --decode ; echo
6iTi5AMTlGDlPdxOOdxXB2B8Jgloq08gkjFDv8qsqsqsqsblablao%


on se logge ensuite avec le user root et le mdp recupéré sur l'url http://gitlab.192.168.39.112.nip.io

kubectl get secret <name>-gitlab-initial-root-password -ojsonpath='{.data.password}' | base64 --decode ; echo

root 



== fin de set up ==

