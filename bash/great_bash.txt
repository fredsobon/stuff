### great bash ###

bash --version
GNU bash, version 4.3.42(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2013 Free Software Foundation, Inc.
Licence GPLv3+ : GNU GPL version 3 ou ultérieure <http://gnu.org/licenses/gpl.html>

##  io : redirections :
standart input 
program
standart output
standart error

boogie@x61:/tmp$ ls -ld orbit-boogie
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie
boogie@x61:/tmp$ ls -ld orbit-boogie > out.txt
boogie@x61:/tmp$ cat out.txt 
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie

boogie@x61:/tmp$ ls not_here > out.txt
ls: impossible d'accéder à not_here: Aucun fichier ou dossier de ce type
boogie@x61:/tmp$ cat out.txt

boogie@x61:/tmp$ ls not_here 2> err.txt
boogie@x61:/tmp$ cat err.txt 
ls: impossible d'accéder à not_here: Aucun fichier ou dossier de ce type

# Redirection séparrée : 
boogie@x61:/tmp$ ls -ld orbit-boogie not_here > out.txt 2>err.txt 
boogie@x61:/tmp$ cat out.txt 
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie
boogie@x61:/tmp$ cat err.txt 
ls: impossible d'accéder à not_here: Aucun fichier ou dossier de ce type
-Redirection globale : on peut vouloir regrouper les sorties et les erreurs au sein du même fichier 

boogie@x61:/tmp$ ls -ld orbit-boogie not_here &> all.txt
boogie@x61:/tmp$ cat all.txt 
ls: impossible d'accéder à not_here: Aucun fichier ou dossier de ce type
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie

- Attention l'ordre des redirections est important :

- ici on redirige notre entrée vers un fichier puis on redirige les erreurs vers le fichier de sortie standard : tout est donc correctement regroupé : sortie + erreur au sein de notre fichier : 
boogie@x61:/tmp$ ls -ld orbit-boogie not_here > out.txt 2>&1 
boogie@x61:/tmp$ cat out.txt 
ls: impossible d'accéder à not_here: Aucun fichier ou dossier de ce type
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie


#  Redirection vers programme :

boogie@x61:/tmp$ cat out.txt 
drwx------ 2 boogie boogie 1024 janv.  1  1970 orbit-boogie
boogie@x61:/tmp$ wc < out.txt 
 1  9 60

- pipe :
boogie@x61:/tmp$ ls |wc 
     10      10     251
 
On peut combiner la puissance des redirections et le pipe. On peut par exemple rediriger les erreurs vers la sortie standart puis envoyer le tout à une autre commande via le "|" : les erreurs sont bien capturées :

Si on essaye de faire un ls sur un fichier qui n'existe pas : on a un message d'erreur sur la sortie 
boogie@x61:/tmp$ ls lapin
ls: impossible d'accéder à lapin: Aucun fichier ou dossier de ce type
En redirigeant l'erreur vers la sortie puis en envoyant le tout a wc via le pipe : on peut avoir le résultat de wc concernant l'erreur générée.
boogie@x61:/tmp$ ls lapin 2>&1 | wc
      1      12      72

# Heredoc :

On peut rediriger vers une commande un flux / texte saisi en entrée 

boogie@x61:/tmp$ wc << EOF
> this is a test
> EOF
 1  4 15

On a donc l'utilisation d'une chaine de caractère ici EOF (on peut saisir ce que l'on veut) qui va servir d'étiquette , on saisit le texte qu'on veut puis quand on a fini on ressaisi notre etiquette : le resultat de notre commande apparait ensuite.
On peut par exemple sans avoir besoin d'un fichier séparer chercher un num dans une liste. On crée un fichier et on l'appelle avec bash 

boogie@x61:/tmp$ cat ph
grep -i $* << EOF
titi 444
tata 555
tutu 666
toto 777
EOF

boogie@x61:/tmp$ bash ph toto
toto 777
 
